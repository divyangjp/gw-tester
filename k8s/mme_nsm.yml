---
# SPDX-license-identifier: Apache-2.0
##############################################################################
# Copyright (c) 2020
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################

apiVersion: v1
kind: Pod
metadata:
  name: mme
  labels:
    app.kubernetes.io/name: mme
    network: epc
spec:
  serviceAccount: nse-acc
  initContainers:
    - name: install
      image: electrocucaracha/mme:0.7.5
      command: ["cp", "/etc/gw-tester/mme.yml", "/work-dir/mme.yml"]
      volumeMounts:
        - name: config
          mountPath: /etc/gw-tester/
        - name: workdir
          mountPath: /work-dir
    - name: nsm-init-container
      image: networkservicemesh/nsm-init:v0.2.0
      env:
        - name: NS_NETWORKSERVICEMESH_IO
          value: lte-network/s111?link=s11
      resources:
        limits:
          networkservicemesh.io/socket: 1
  containers:
    - name: sidecar-s1c
      image: nse:v0.2.0
      env:
        - name: ADVERTISE_NSE_NAME
          value: "lte-network"
        - name: ADVERTISE_NSE_LABELS
          value: "app=mme-s1c"
        - name: IP_ADDRESS
          value: "172.21.1.0/24"
      resources:
        limits:
          networkservicemesh.io/socket: 1
    - image: electrocucaracha/mme:0.7.5
      name: mme
      command:
        - "sh"
      args:
        - "/opt/gw-tester/script/init.sh"
      volumeMounts:
        - name: init-script
          mountPath: /opt/gw-tester/script
        - name: workdir
          mountPath: /etc/gw-tester
  volumes:
    - name: init-script
      configMap:
        name: mme-init-script
    - name: workdir
      emptyDir: {}
    - name: config
      configMap:
        name: mme-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mme-init-script
data:
  init.sh: |
    if [ $(curl ${LTE_ETCD_PORT/tcp/http}/v2/keys/pgw_s5c_ip -s -o /dev/null -w "%{http_code}") == "200" ]; then
        pgw_s5c_ip=$(curl -s ${LTE_ETCD_PORT/tcp/http}/v2/keys/pgw_s5c_ip | jq  -r ".node.value")
    else
        pgw_s5c_ip=$(curl -s ${LTE_ETCD_PORT/tcp/http}/v2/keys/pgw_s5c_ip?wait=true | jq  -r ".node.value")
    fi
    sed -i "s|pgw_s5c_ip:.*|pgw_s5c_ip: \"$pgw_s5c_ip\"|g" /etc/gw-tester/mme.yml

    if [ $(curl ${LTE_ETCD_PORT/tcp/http}/v2/keys/sgw_s11_ip -s -o /dev/null -w "%{http_code}") == "200" ]; then
        sgw_s11_ip=$(curl -s ${LTE_ETCD_PORT/tcp/http}/v2/keys/sgw_s11_ip | jq  -r ".node.value")
    else
        sgw_s11_ip=$(curl -s ${LTE_ETCD_PORT/tcp/http}/v2/keys/sgw_s11_ip?wait=true | jq  -r ".node.value")
    fi
    sed -i "s|sgw_s11_ip:.*|sgw_s11_ip: \"$sgw_s11_ip\"|g" /etc/gw-tester/mme.yml

    until ip add show s111 > /dev/null ; do
        sleep 2
    done
    s11_ip=$(ifconfig s111 | awk '/inet addr/{print substr($2,6)}')
    sed -i "s|  s11_ip:.*|  s11_ip: \"${s11_ip}\"|g" /etc/gw-tester/mme.yml

    until ip route get 172.21.1.0 | grep -q nsm; do
        sleep 2
    done
    s1c_ip=$(ip route get 172.21.1.0 | awk '{ print $6}')
    curl -s "${LTE_ETCD_PORT/tcp/http}/v2/keys/mme_s1c_ip" -XPUT -d value="$s1c_ip" > /dev/null
    sed -i "s|s1c_addr:.*|s1c_addr: \"${s1c_ip}:36412\"|g" /etc/gw-tester/mme.yml

    /opt/gw-tester/bin/mme -config /etc/gw-tester/mme.yml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mme-config
data:
  mme.yml: |
    mcc: "001"
    mnc: "01"
    apn: "gw-tester.go-gtp.example"
    local_addresses:
      s1c_addr: "172.21.1.12:36412"
      s11_ip: "172.22.0.12"
    sgw_s11_ip: "172.22.0.13"
    pgw_s5c_ip: "172.25.1.14"
