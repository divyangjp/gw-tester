---
# SPDX-license-identifier: Apache-2.0
##############################################################################
# Copyright (c) 2020
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################

apiVersion: v1
kind: Pod
metadata:
  name: mme
  annotations:
    k8s.v1.cni.cncf.io/networks: |
      [
        {"name": "lte-s11", "interface": "s111"},
        {"name": "lte-s1c", "interface": "s1c2"}
      ]
    danm.k8s.io/interfaces: |
      [
        {"clusterNetwork":"default"},
        {"clusterNetwork":"lte-s11"},
        {"clusterNetwork":"lte-s1c"}
      ]
  labels:
    app.kubernetes.io/name: mme
    network: epc
spec:
  containers:
    - image: electrocucaracha/mme:0.7.5
      name: mme
      command:
        - "sh"
      args:
        - "/opt/gw-tester/script/init.sh"
      volumeMounts:
        - name: init-script
          mountPath: /opt/gw-tester/script
  volumes:
    - name: init-script
      configMap:
        name: mme-init-script
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mme-init-script
data:
  init.sh: |
    if [ $(curl ${LTE_ETCD_PORT/tcp/http}/v2/keys/pgw_s5c_ip -s -o /dev/null -w "%{http_code}") == "200" ]; then
        pgw_s5c_ip=$(curl -s ${LTE_ETCD_PORT/tcp/http}/v2/keys/pgw_s5c_ip | jq  -r ".node.value")
    else
        pgw_s5c_ip=$(curl -s ${LTE_ETCD_PORT/tcp/http}/v2/keys/pgw_s5c_ip?wait=true | jq  -r ".node.value")
    fi
    sed -i "s|pgw_s5c_ip:.*|pgw_s5c_ip: \"$pgw_s5c_ip\"|g" /etc/gw-tester/mme.yml

    if [ $(curl ${LTE_ETCD_PORT/tcp/http}/v2/keys/sgw_s11_ip -s -o /dev/null -w "%{http_code}") == "200" ]; then
        sgw_s11_ip=$(curl -s ${LTE_ETCD_PORT/tcp/http}/v2/keys/sgw_s11_ip | jq  -r ".node.value")
    else
        sgw_s11_ip=$(curl -s ${LTE_ETCD_PORT/tcp/http}/v2/keys/sgw_s11_ip?wait=true | jq  -r ".node.value")
    fi
    sed -i "s|sgw_s11_ip:.*|sgw_s11_ip: \"$sgw_s11_ip\"|g" /etc/gw-tester/mme.yml

    until ip add show s111 > /dev/null ; do
        sleep 2
    done
    s11_ip=$(ifconfig s111 | awk '/inet addr/{print substr($2,6)}')
    sed -i "s|  s11_ip:.*|  s11_ip: \"${s11_ip}\"|g" /etc/gw-tester/mme.yml

    s1c_ip=$(ifconfig s1c2 | awk '/inet addr/{print substr($2,6)}')
    curl -s "${LTE_ETCD_PORT/tcp/http}/v2/keys/mme_s1c_ip" -XPUT -d value="$s1c_ip" > /dev/null
    sed -i "s|  s1c_addr:.*|  s1c_addr: \"${s1c_ip}:36412\"|g" /etc/gw-tester/mme.yml

    ip a
    ip route
    cat /etc/gw-tester/mme.yml

    /opt/gw-tester/bin/mme -config /etc/gw-tester/mme.yml
