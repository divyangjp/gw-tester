---
# SPDX-license-identifier: Apache-2.0
##############################################################################
# Copyright (c) 2020
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pgw.fullname" . }}
  labels:
    {{- include "pgw.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "pgw.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        network: pdn
        {{- include "pgw.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccount: nse-acc
      containers:
        - name: sidecar-sgi
          image: nse:v0.2.0
          env:
            - name: ADVERTISE_NSE_NAME
              value: "lte-network"
            - name: ADVERTISE_NSE_LABELS
              value: "app=http-server-sgi"
            - name: IP_ADDRESS
              value: "{{ .Values.sgi.networkId }}/{{ .Values.sgi.networkLength }}"
            - name: ROUTE
              value: "{{ .Values.euu.networkId }}/{{ .Values.euu.networkLength }}"
          resources:
            limits:
              networkservicemesh.io/socket: 1
        - name: sidecar-s5u
          image: nse:v0.2.0
          env:
            - name: ADVERTISE_NSE_NAME
              value: "lte-network"
            - name: ADVERTISE_NSE_LABELS
              value: "app=pgw-s5u"
            - name: IP_ADDRESS
              value: "{{ .Values.s5u.networkId }}/{{ .Values.s5u.networkLength }}"
          resources:
            limits:
              networkservicemesh.io/socket: 1
        - name: sidecar-s5c
          image: nse:v0.2.0
          env:
            - name: ADVERTISE_NSE_NAME
              value: "lte-network"
            - name: ADVERTISE_NSE_LABELS
              value: "app=pgw-s5c"
            - name: IP_ADDRESS
              value: "{{ .Values.s5c.networkId }}/{{ .Values.s5c.networkLength }}"
          resources:
            limits:
              networkservicemesh.io/socket: 1
        - name: {{ .Chart.Name }}
          securityContext:
            capabilities:
              add: ["NET_ADMIN"]
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "sh"
          args:
            - "/opt/gw-tester/script/init.sh"
          volumeMounts:
            - name: init-script
              mountPath: /opt/gw-tester/script
      volumes:
        - name: init-script
          configMap:
            name: pgw-init-script
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pgw-init-script
  labels:
    {{- include "pgw.labels" . | nindent 4 }}
data:
  init.sh: |
    until ip route get {{ .Values.s5u.networkId }} | grep -q nsm; do
        sleep 2
    done
    s5u_ip=$(ip route get {{ .Values.s5u.networkId }} | awk '{ print $6}')
    sed -i "s|s5u_ip:.*|s5u_ip: \"${s5u_ip}\"|g" /etc/gw-tester/pgw.yml

    until ip route get {{ .Values.s5c.networkId }} | grep -q nsm; do
        sleep 2
    done
    s5c_ip=$(ip route get {{ .Values.s5c.networkId }} | awk '{ print $6}')
    curl -s http://lte-etcd.default.svc.cluster.local:12379/v2/keys/pgw_s5c_ip -XPUT -d value="$s5c_ip" > /dev/null
    sed -i "s|s5c_ip:.*|s5c_ip: \"${s5c_ip}\"|g" /etc/gw-tester/pgw.yml

    until ip route get {{ .Values.sgi.networkId }} | grep -q nsm; do
        sleep 2
    done
    sgi_if_name=$(ip route get {{ .Values.sgi.networkId }} | awk '{ print $4}')
    sed -i "s|sgi_if_name:.*|sgi_if_name: \"${sgi_if_name}\"|g" /etc/gw-tester/pgw.yml
    sed -i "s|route_subnet:.*|route_subnet: \"{{ .Values.sgi.networkId }}/{{ .Values.sgi.networkLength }}\"|g" /etc/gw-tester/pgw.yml

    ip a
    ip route
    cat /etc/gw-tester/pgw.yml

    /opt/gw-tester/bin/pgw -config /etc/gw-tester/pgw.yml
