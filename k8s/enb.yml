---
# SPDX-license-identifier: Apache-2.0
##############################################################################
# Copyright (c) 2020
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################

apiVersion: v1
kind: Pod
metadata:
  name: enb
  annotations:
    k8s.v1.cni.cncf.io/networks: |
      [
        {"name": "lte-euu", "interface": "euu1"},
        {"name": "lte-s1c", "interface": "s1c2"},
        {"name": "lte-s1u", "interface": "s1u3"}
      ]
    danm.k8s.io/interfaces: |
      [
        {"clusterNetwork":"default"},
        {"clusterNetwork":"lte-euu"},
        {"clusterNetwork":"lte-s1c"},
        {"clusterNetwork":"lte-s1u"}
      ]
  labels:
    app.kubernetes.io/name: enb
    network: e-utran
spec:
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: network
                operator: In
                values:
                  - pdn
          topologyKey: "kubernetes.io/hostname"
  containers:
    - image: electrocucaracha/enb:0.7.5
      name: enb
      securityContext:
        capabilities:
          add: ["NET_ADMIN"]
      command:
        - "sh"
      args:
        - "/opt/gw-tester/script/init.sh"
      volumeMounts:
        - name: init-script
          mountPath: /opt/gw-tester/script
  volumes:
    - name: init-script
      configMap:
        name: enb-init-script
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: enb-init-script
data:
  init.sh: |2
    if [ $(curl ${LTE_ETCD_PORT/tcp/http}/v2/keys/mme_s1c_ip -s -o /dev/null -w "%{http_code}") == "200" ]; then
        mme_s1c_ip=$(curl -s ${LTE_ETCD_PORT/tcp/http}/v2/keys/mme_s1c_ip | jq  -r ".node.value")
    else
        mme_s1c_ip=$(curl -s ${LTE_ETCD_PORT/tcp/http}/v2/keys/mme_s1c_ip?wait=true | jq  -r ".node.value")
    fi
    sed -i "s|mme_addr:.*|mme_addr: \"${mme_s1c_ip}:36412\"|g" /etc/gw-tester/enb.yml

    until ip add show s1c2 > /dev/null ; do
        sleep 2
    done
    s1c_ip=$(ifconfig s1c2 | awk '/inet addr/{print substr($2,6)}')
    sed -i "s|  s1c_ip:.*|  s1c_ip: \"${s1c_ip}\"|g" /etc/gw-tester/enb.yml

    until ip add show s1u3 > /dev/null ; do
        sleep 2
    done
    s1u_ip=$(ifconfig s1u3 | awk '/inet addr/{print substr($2,6)}')
    sed -i "s|  s1u_ip:.*|  s1u_ip: \"${s1u_ip}\"|g" /etc/gw-tester/enb.yml

    euu_if="euu1"
    sed -i '/subscribers:/,$d' /etc/gw-tester/enb.yml
    echo "subscribers:" >> /etc/gw-tester/enb.yml
    euu_ip=$(ifconfig $euu_if | awk '/inet addr/{print substr($2,6)}')
    for i in $(seq 0 254); do
        if [ "10.0.3.$i" != "$euu_ip" ]; then
            format_num=$(printf "%03i" $i)
            cat <<EOL >> /etc/gw-tester/enb.yml
      - imsi: "00101000000000$format_num"
        msisdn: "81400000000$format_num"
        imeisv: "123450000000$format_num"
        src_ip: "10.0.3.$i"
        i_tei: 0
        type: "external"
        euu_if_name: "$euu_if"
        http_url: ""
        reattach_on_reload: false
    EOL
        fi
    done

    ip a
    ip route
    cat /etc/gw-tester/enb.yml

    if [ $(curl ${LTE_ETCD_PORT/tcp/http}/v2/keys/pgw_s5c_ip -s -o /dev/null -w "%{http_code}") != "200" ]; then
        curl -s ${LTE_ETCD_PORT/tcp/http}/v2/keys/pgw_s5c_ip?wait=true
    fi  

    if [ $(curl ${LTE_ETCD_PORT/tcp/http}/v2/keys/sgw_s11_ip -s -o /dev/null -w "%{http_code}") != "200" ]; then
        curl -s ${LTE_ETCD_PORT/tcp/http}/v2/keys/sgw_s11_ip?wait=true
    fi  

    /opt/gw-tester/bin/enb -config /etc/gw-tester/enb.yml
